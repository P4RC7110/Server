//===== rAthena Script ======================================= 
//= Warper
//===== By: ================================================== 
//= Euphy
//===== Current Version: =====================================
//= 1.2
//===== Compatible With: =====================================
//= rAthena SVN
//===== Description: ========================================= 
//= A complete - but very condensed - warper script.
//= Coordinates written largely by Tekno-Kanix and ToastOfDoom.
//============================================================

-	script	Warper	-1,{
mes "[Warper]";
mes "Where do you want to warp?";
function Go; function Disp; function Pick;

// --------------------------------------------------
//	Main Menu:
// --------------------------------------------------
menu	
"Last Warp ^777777["+lastwarp$+"]^000000",-,
" ~ Towns",Towns, 
" ~ Fields",Fields, 
" ~ Dungeons",Dungeons;

	if (lastwarp$ == "") {dispbottom "You have not warped anywhere yet."; end;}
	

	close2;
	if (lastwarp$ == "tha_t01"){
			if(Zeny > 5000){	set Zeny, Zeny - 5000;	}
			else{	dispbottom "You don't have enough Zeny."; end;	}
	}else if (lastwarp$ == "tur_dun01"){
			if(Zeny > 10000){	set Zeny, Zeny - 10000;	}
			else{	dispbottom "You don't have enough Zeny."; end;	}
	}
	
		warp lastwarp$,lastwarpx,lastwarpy;
	end;
// ------------------- Functions -------------------
// * Go("<map>",<x>,<y>);
//	~ Warps directly to a map.
// * Disp("<Menu Option>",<first option>,<last option>);
// * Pick("<map_prefix>"{,<index offset>});
//	~ Dynamic menu and map selection.
// * Disp("","<Option 1>:<Option 2>:<etc.>");
// * Pick("","<map1>","<map2>","<etc.>");
//	~ Manual menu and map selection.
//
// Other notes:
//   ~ Array @c[] holds all (x,y) coordinates.
//   ~ Use @c[2] EXCEPT when maps begin dynamically
//	  at 0: use @c[0] and Pick() offset 1.
// --------------------------------------------------

function Go {

	warp getarg(0),getarg(1,0),getarg(2,0);
	getmapxy(lastwarp$,lastwarpx,lastwarpy,0);
	end;
}
function Disp {
	set @menu$,"";
	if(getarg(0)=="") {
		set @menu$,getarg(1);
		return;
	}
	for(set .@i,getarg(1); .@i<=getarg(2); set .@i,.@i+1)
		set @menu$, @menu$+getarg(0)+" "+.@i+":";
	return;
}
function Pick {
	if(getarg(0)=="") {
		set .@i, select(@menu$);

		warp getarg(.@i),@c[.@i*2],@c[.@i*2+1];
	} else {
		set .@i, select(@menu$)-getarg(1,0);

		warp getarg(0)+((.@i<10)?"0":"")+.@i,@c[.@i*2],@c[.@i*2+1];
	}
	getmapxy(lastwarp$,lastwarpx,lastwarpy,0);
	end;
}

// --------------------------------------------------
	Towns:
// --------------------------------------------------

menu	
//"Prontera",T1,
"Alberta",T2,
"Aldebaran",T3,
"Comodo",T4, 
"Geffen",T5,
"Izlude",T6,
"Morroc",T7,
"Payon",T8,
"Umbala",T9,
"Yuno",T10;


T1: 	

	Go("prontera",116,73);
	
T2: 	

	Go("alberta",117,57);
	
T3: 	

	Go("aldebaran",166,112);
	
T4: 	

	Go("comodo",209,143);

T5: 	

	Go("geffen",119,40);

T6: 	

	Go("izlude",94,103);

T7: 	

	Go("morocc",156,46);

T8: 	

	Go("payon",160,58);
	
T9: 	

	Go("umbala",89,157);
	
T10: 	

	Go("yuno",157,51);


// --------------------------------------------------
	Fields:
// --------------------------------------------------


menu	
"Amatsu Fields",F1, 
"Ayothaya Fields",F2, 
"Comodo Fields",F5, 
"Einbroch Fields",F6, 
"Geffen Fields",F8, 
"Gonryun Fields",F9, 
"Hugel Fields",F10,
"Lighthalzen Fields",F11, 
"Louyang Field",F12, 
"Mjolnir Fields",F15,
"Niflheim Fields",F17, 
"Payon Forests",F18,
"Prontera Fields",F19, 
"Rachel Fields",F20, 
"Sograt Deserts",F21,
"Umbala Fields",F23, 
"Veins Fields",F24,
"Yuno Fields",F25;


F1:

	setarray @c[2],190,197;
	Disp("Amatsu Field",1,1); Pick("ama_fild");
F2: 
if(countitem(7285) == 1){
	setarray @c[2],173,134,212,150;
	Disp("Ayothaya Field",1,2); Pick("ayo_fild");
}else{

    setarray @c[2],173,134;
	Disp("Ayothaya Field",1,1); Pick("ayo_fild");
}
F4: 

	setarray @c[2],74,32;
	Disp("Brasilis Field",1,1); Pick("bra_fild");
F5: 

	setarray @c[2],180,178,231,160,191,172,228,194,224,203,190,223,234,177,194,175,172,172;
	Disp("Comodo Field",1,9); Pick("cmd_fild");
F6: 

	setarray @c[2],142,225,182,141,187,228,185,173,216,173,195,148,272,220,173,214,207,174,196,200;
	Disp("Einbroch Field",1,10); Pick("ein_fild");
F8: 

	setarray @c[2],46,199,375,111,21,52,187,42,64,18,379,211,336,187,357,187,225,28,114,360,221,369,41,369;
	Disp("","Geffen Field 0:Geffen Field 1:Geffen Field 3:Geffen Field 4:Geffen Field 5:Geffen Field 6:Geffen Field 7:Geffen Field 8:Geffen Field 9:Geffen Field 11:Geffen Field 12:Geffen Field 13");
	Pick("","gef_fild00","gef_fild01","gef_fild03","gef_fild04","gef_fild05","gef_fild06","gef_fild07","gef_fild08","gef_fild09","gef_fild11","gef_fild12","gef_fild13");
F9: 

	setarray @c[2],220,227;
	Disp("Gonryun Field",1,1); Pick("gon_fild");
F10: 

	setarray @c[2],268,101,222,193,232,185,252,189,196,106,216,220,227,197;
	Disp("Hugel Field",1,7); Pick("hu_fild");
F11: 

	setarray @c[2],240,179,185,235,240,226;
	Disp("Lighthalzen Field",1,3); Pick("lhz_fild");
F12: 

	setarray @c[2],229,187;
	Disp("Louyang Field",1,1); Pick("lou_fild");
F15: 	

	setarray @c[2],204,120,175,193,208,213,181,240,195,270,235,202,188,215,205,144,245,223,180,206,196,208;
	Disp("","Mjolnir Field 1:Mjolnir Field 2:Mjolnir Field 3:Mjolnir Field 5:Mjolnir Field 6:Mjolnir Field 7:Mjolnir Field 8:Mjolnir Field 9:Mjolnir Field 10:Mjolnir Field 11:Mjolnir Field 12");
	Pick("","mjolnir_01","mjolnir_02","mjolnir_03","mjolnir_05","mjolnir_06","mjolnir_07","mjolnir_08","mjolnir_09","mjolnir_10","mjolnir_11","mjolnir_12");
F16: 

	setarray @c[2],82,104,131,147;
	Disp("","Moscovia Field 2");
	Pick("","mosk_fild02");
F17: 

	setarray @c[2],215,229,167,234;
	Disp("Niflheim Field",1,2); Pick("nif_fild");
F18: 

	setarray @c[2],158,206,151,219,205,148,134,204,193,235,200,177,137,189,201,224,160,205;
	Disp("","Payon Field 1:Payon Field 2:Payon Field 3:Payon Field 5:Payon Field 6:Payon Field 7:Payon Field 8:Payon Field 9:Payon Field 10");
	Pick("","pay_fild01","pay_fild02","pay_fild03","pay_fild05","pay_fild06","pay_fild07","pay_fild08","pay_fild09","pay_fild10");
F19: 

	setarray @c[0],208,227,190,206,240,206,190,143,307,252,239,213,185,188,193,194,187,218,210,183,195,149,198,164;
	Disp("Prontera Field",0,11); Pick("prt_fild",1);
F20: 

	setarray @c[2],192,162,225,202,202,214,263,196,217,201,87,121,277,181,221,185,175,200,174,197;
	Disp("","Rachel Field 1:Rachel Field 5:Rachel Field 6:Rachel Field 7:Rachel Field 8:Rachel Field 9:Rachel Field 10:Rachel Field 11:Rachel Field 12:Rachel Field 13");
	Pick("","ra_fild01","ra_fild05","ra_fild06","ra_fild07","ra_fild08","ra_fild09","ra_fild10","ra_fild11","ra_fild12","ra_fild13");
F21: 

	setarray @c[2],219,205,177,206,194,182,224,170,198,216,156,187,185,263,206,228,209,223;
	Disp("","Sograt Desert 1:Sograt Desert 2:Sograt Desert 3:Sograt Desert 7:Sograt Desert 11:Sograt Desert 12:Sograt Desert 13:Sograt Desert 16:Sograt Desert 18");
	Pick("","moc_fild01","moc_fild02","moc_fild03","moc_fild07","moc_fild11","moc_fild12","moc_fild13","moc_fild16","moc_fild18");
F23: 

	setarray @c[2],217,206,223,221,237,215,202,197;
	Disp("Umbala Field",1,4); Pick("um_fild");
F24: 

	setarray @c[2],350,220,49,249,354,191,149,367;
	Disp("","Veins Field 3:Veins Field 4:Veins Field 5:Veins Field 7");
	Pick("","ve_fild03","ve_fild04","ve_fild05","ve_fild07");
F25: 

	setarray @c[2],208,19,92,186,231,284,217,29,214,176,216,191,329,302,44,183,300,118,195,371;
	Disp("","Yuno Field 1:Yuno Field 2:Yuno Field 4:Yuno Field 6:Yuno Field 7:Yuno Field 8:Yuno Field 9:Yuno Field 10:Yuno Field 11:Yuno Field 12");
	Pick("","yuno_fild01","yuno_fild02","yuno_fild04","yuno_fild06","yuno_fild07","yuno_fild08","yuno_fild09","yuno_fild10","yuno_fild11","yuno_fild12");

// --------------------------------------------------
	Dungeons:
// --------------------------------------------------


switch(select("Abyss Lakes:Amatsu Dungeon:Anthell:Beach Dungeon:Bio Laboratory:Byalan Dungeon:Clock Tower:Coal Mines:Culvert: Einbroch Dungeon:Gefenia:Geffen Dungeon:Glast Heim:Gonryun Dungeon:Hidden Dungeon:Ice Dungeon:Juperos:Kiel Dungeon:Louyang Dungeon:Magma Dungeon:Moscovia Dungeon:Nameless Island:Odin Temple:Orc Dungeon:Payon Dungeon:Pyramids:Rachel Sanctuary:Sphinx:Sunken Ship:Thanatos Tower:Thor Volcano:Toy Factory:Turtle Dungeon:Umbala Dungeon")){




case 1: 
	next;
	if(!abyss){
	set .@zeny,30000000;
	set .@mapname$,"Abyss Lakes";

	mes "[Warper]";
	mes "Do you want me to unlock this warp for your account?";
	next;
	switch(select("[^FF0000UNLOCK^000000] 30,000,000z:Nevermind")){
	case 1:
		if(Zeny < .@zeny){
			mes "[Warper]";
			mes "I'm sorry but your zeny is not enough.";
			close;
		}
		mes "[Warper]";
		mes ""+.@mapname$+" warps is now unlocked.";
		set abyss,1;
		set Zeny, Zeny - .@zeny;
		close;
	case 2:
		mes "[Warper]";
		mes "Okay, maybe it's the right decision.";
		close;
	}
	
	}else if(abyss){
   		setarray @c[2],261,272,275,270;
		Disp("Abyss Lakes",1,2); Pick("abyss_");
	}


case 2: 

	next;
	if(!ama_dun){
	set .@zeny,30000000;
	set .@mapname$,"Amatsu Dungeon";

	mes "[Warper]";
	mes "Do you want me to unlock this warp for your character?";
	next;
	switch(select("[^FF0000UNLOCK^000000] 30,000,000z:Nevermind")){
	case 1:
		if(Zeny < .@zeny){
			mes "[Warper]";
			mes "I'm sorry but your zeny is not enough.";
			close;
		}
		mes "[Warper]";
		mes ""+.@mapname$+" warps is now unlocked.";
		set ama_dun,1;
		set Zeny, Zeny - .@zeny;
		close;
	case 2:
		mes "[Warper]";
		mes "Okay, maybe it's the right decision.";
		close;
	}
	
	}else if(ama_dun){
   		setarray @c[2],228,11,34,41;
		Disp("Amatsu Dungeon",1,2); Pick("ama_dun");
	}


case 3:

	setarray @c[2],35,262;
	Disp("Anthell",1,1); Pick("anthell");

case 4:  

	setarray @c[2],255,244,23,260;
	Disp("Beach Dungeon",2,3); Pick("","beach_dun2","beach_dun3");

case 5: 
	next;
	if(!lhz_dun){
	set .@zeny,80000000;
	set .@mapname$,"Bio Laboratory";

	mes "[Warper]";
	mes "Do you want me to unlock this warp for your character?";
	next;
	switch(select("[^FF0000UNLOCK^000000] 80,000,000z:Nevermind")){
	case 1:
		if(Zeny < .@zeny){
			mes "[Warper]";
			mes "I'm sorry but your zeny is not enough.";
			close;
		}
		mes "[Warper]";
		mes ""+.@mapname$+" warps is now unlocked.";
		set lhz_dun,1;
		set Zeny, Zeny - .@zeny;
		close;
	case 2:
		mes "[Warper]";
		mes "Okay, maybe it's the right decision.";
		close;
	}
	
	}else if(lhz_dun){
   			setarray @c[2],149,142;
			Disp("","Bio Laboratory 2");
			Pick("","lhz_dun02");
	}


case 6:
  
	setarray @c[0],168,168,253,252,236,204,32,63,26,27;
	Disp("Byalan Dungeon",1,5); Pick("iz_dun",1);

case 7:
  
	setarray @c[2],200,160;
	Disp("","Clock Tower 1");
	Pick("","c_tower1");
	
case 8:

	setarray @c[2],52,17,381,343,302,262;
	Disp("Coal Mines",1,3); Pick("mjo_dun");

case 9:
 
	setarray @c[2],131,247,19,19,180,169;
	Disp("Culvert",1,3); Pick("","prt_sewb1","prt_sewb2","prt_sewb3");

case 10:
 
	setarray @c[2],22,14;
	Disp("Einbroch Dungeon",1,1); Pick("ein_dun");

case 11: 
	next;
	if(!gefenia){
	set .@zeny,80000000;
	set .@mapname$,"Gefenia";

	mes "[Warper]";
	mes "Do you want me to unlock this warp for your character?";
	next;
	switch(select("[^FF0000UNLOCK^000000] 80,000,000z:Nevermind")){
	case 1:
		if(Zeny < .@zeny){
			mes "[Warper]";
			mes "I'm sorry but your zeny is not enough.";
			close;
		}
		mes "[Warper]";
		mes ""+.@mapname$+" warps is now unlocked.";
		set gefenia,1;
		set Zeny, Zeny - .@zeny;
		close;
	case 2:
		mes "[Warper]";
		mes "Okay, maybe it's the right decision.";
		close;
	}
	
	}else if(gefenia){
   			setarray @c[2],40,103,203,34,266,168,130,272;
			Disp("Gefenia",1,4); Pick("gefenia",0);
	}
case 12:
 
	setarray @c[2],104,99,203,200;
	Disp("","Geffen Dungeon 1:Geffen Dungeon 4"); Pick("","gef_dun00","gef_dun03");

case 13:
 
	setarray @c[2],375,304,199,29,104,25,150,15,157,287,258,255,108,291,171,283,68,277,156,7,12,7,133,271,224,274,14,70,150,14;
	Disp("","Entrance:Castle 1:Castle 2:Chivalry 1:Chivalry 2:Culvert 1:Culvert 2:Culvert 3:Culvert 4:St. Abbey:Staircase Dungeon:Underground Cave 1:Underground Cave 2:Underground Prison 1:Underground Prison 2");
	Pick("","glast_01","gl_cas01","gl_cas02","gl_knt01","gl_knt02","gl_sew01","gl_sew02","gl_sew03","gl_sew04","gl_church","gl_step","gl_dun01","gl_dun02","gl_prison","gl_prison1");

case 14: 

	setarray @c[2],153,48;
	Disp("Gonryun Dungeon",1,1); Pick("gon_dun");

case 15: 

	setarray @c[2],176,7,93,20;
	Disp("Hidden Dungeon",1,2); Pick("prt_maze");

case 16:
 
	setarray @c[2],157,14,151,155,149,22;
	Disp("Ice Dungeon",1,3); Pick("ice_dun");

case 17:
 
	setarray @c[2],140,51,53,247,37,63;
	Disp("","Entrance:Juperos 1:Juperos 2");
	Pick("","jupe_cave","juperos_01","juperos_02");

case 18:
	next;
	if(!kh_dun){
	set .@zeny,100000000;
	set .@mapname$,"Kiel Dungeon";

	mes "[Warper]";
	mes "Do you want me to unlock this warp for your character?";
	next;
	switch(select("[^FF0000UNLOCK^000000] 70,000,000z:Nevermind")){
	case 1:
		if(Zeny < .@zeny){
			mes "[Warper]";
			mes "I'm sorry but your zeny is not enough.";
			close;
		}
		mes "[Warper]";
		mes ""+.@mapname$+" warps is now unlocked.";
		set kh_dun,1;
		set Zeny, Zeny - .@zeny;
		close;
	case 2:
		mes "[Warper]";
		mes "Okay, maybe it's the right decision.";
		close;
	}
	
	}else if(kh_dun){
    			setarray @c[2],28,226;
			Disp("Kiel Dungeon",1,1); Pick("kh_dun");
	}

case 19:
 
	setarray @c[2],218,196,282,20;
	Disp("","The Royal Tomb:Inside the Royal Tomb"); Pick("lou_dun");

case 20:

	setarray @c[2],126,68,47,30;
	Disp("Magma Dungeon",1,2); Pick("mag_dun");

case 21: 
	next;
	if(!mosk_dun){
	set .@zeny,30000000;
	set .@mapname$,"Moscovia Dungeon";

	mes "[Warper]";
	mes "Do you want me to unlock this warp for your character?";
	next;
	switch(select("[^FF0000UNLOCK^000000] 30,000,000z:Nevermind")){
	case 1:
		if(Zeny < .@zeny){
			mes "[Warper]";
			mes "I'm sorry but your zeny is not enough.";
			close;
		}
		mes "[Warper]";
		mes ""+.@mapname$+" warps is now unlocked.";
		set mosk_dun,1;
		set Zeny, Zeny - .@zeny;
		close;
	case 2:
		mes "[Warper]";
		mes "Okay, maybe it's the right decision.";
		close;
	}
	
	}else if(mosk_dun){
			setarray @c[2],189,48,165,30;
			Disp("Moscovia Dungeon",1,2); Pick("mosk_dun");
	}

case 22: 
	next;
	if(!ra_san){

	mes "[Warper]";
	mes "You should unlock first the Rachel Sanctuary.";
	close;
		
	}else if(!nameless_n){
	set .@zeny,70000000;
	set .@mapname$,"Nameless Island";

	mes "[Warper]";
	mes "Do you want me to unlock this warp for your character?";
	next;
	switch(select("[^FF0000UNLOCK^000000] 70,000,000z:Nevermind")){
	case 1:
		if(Zeny < .@zeny){
			mes "[Warper]";
			mes "I'm sorry but your zeny is not enough.";
			close;
		}
		mes "[Warper]";
		mes ""+.@mapname$+" warps is now unlocked.";
		set nameless_n,1;
		set Zeny, Zeny - .@zeny;
		close;
	case 2:
		mes "[Warper]";
		mes "Okay, maybe it's the right decision.";
		close;
	}
	
	}else if(nameless_n){
			setarray @c[2],256,215;
			Disp("","Nameless Island"); Pick("","nameless_n");
	}


case 23:
	next;
	if(!odin_tem){
	set .@zeny,30000000;
	set .@mapname$,"Odin Temple";

	mes "[Warper]";
	mes "Do you want me to unlock this warp for your character?";
	next;
	switch(select("[^FF0000UNLOCK^000000] 30,000,000z:Nevermind")){
	case 1:
		if(Zeny < .@zeny){
			mes "[Warper]";
			mes "I'm sorry but your zeny is not enough.";
			close;
		}
		mes "[Warper]";
		mes ""+.@mapname$+" warps is now unlocked.";
		set odin_tem,1;
		set Zeny, Zeny - .@zeny;
		close;
	case 2:
		mes "[Warper]";
		mes "Okay, maybe it's the right decision.";
		close;
	}
	
	}else if(odin_tem){
			setarray @c[2],97,146;
			Disp("Odin Temple",1,1); Pick("odin_tem");
	}
 

case 24:
 
	setarray @c[2],32,170,21,185;
	Disp("Orc Dungeon",1,2); Pick("orcsdun");

case 25:
 
	setarray @c[0],21,183,19,33,19,63,155,159;
	Disp("Payon Dungeon",1,4); Pick("pay_dun",1);

case 26:
 
	setarray @c[2],192,9,10,192,100,92,94,96;
	Disp("","Pyramids 1:Pyramids 2:Pyramids 3:Basement 1"); Pick("","moc_pryd01","moc_pryd02","moc_pryd03","moc_pryd05");

case 27: 
	next;
	if(!ra_san){
	set .@zeny,80000000;
	set .@mapname$,"Rachel Sanctuary";

	mes "[Warper]";
	mes "Do you want me to unlock this warp for your character?";
	next;
	switch(select("[^FF0000UNLOCK^000000] 80,000,000z:Nevermind")){
	case 1:
		if(Zeny < .@zeny){
			mes "[Warper]";
			mes "I'm sorry but your zeny is not enough.";
			close;
		}
		mes "[Warper]";
		mes ""+.@mapname$+" warps is now unlocked.";
		set ra_san,1;
		set Zeny, Zeny - .@zeny;
		close;
	case 2:
		mes "[Warper]";
		mes "Okay, maybe it's the right decision.";
		close;
	}
	
	}else if(ra_san){
			setarray @c[2],139,16;
			Disp("Rachel Sanctuary",1,1); Pick("ra_san");
	}


case 28:
 
	setarray @c[2],288,9,149,81,210,54,10,222;
	Disp("Sphinx",1,4); Pick("","in_sphinx1","in_sphinx2","in_sphinx3","in_sphinx4");

case 29:
 
	setarray @c[2],69,24;
	Disp("Sunken Ship",1,1); Pick("treasure");

case 30: 

if(Zeny > 5000){
    set Zeny, Zeny - 5000;
    setarray @c[2],149,38;
	Disp("Thanatos Tower",1,1); Pick("tha_t");
}else{
	dispbottom "[ You should pay me 5,000z for this warp. ]";
	close;
}

case 31: 
	next;
	if(!thor_v){
	set .@zeny,70000000;
	set .@mapname$,"Thor Volcano";

	mes "[Warper]";
	mes "Do you want me to unlock this warp for your character?";
	next;
	switch(select("[^FF0000UNLOCK^000000] 70,000,000z:Nevermind")){
	case 1:
		if(Zeny < .@zeny){
			mes "[Warper]";
			mes "I'm sorry but your zeny is not enough.";
			close;
		}
		mes "[Warper]";
		mes ""+.@mapname$+" warps is now unlocked.";
		set thor_v,1;
		set Zeny, Zeny - .@zeny;
		close;
	case 2:
		mes "[Warper]";
		mes "Okay, maybe it's the right decision.";
		close;
	}
	
	}else if(thor_v){
			setarray @c[2],21,228,75,205;
			Disp("Thor Volcano",1,2); Pick("thor_v");
	}


case 32:
 
	setarray @c[2],205,15;
	Disp("Toy Factory",1,1); Pick("xmas_dun");

case 33: 

if(Zeny > 10000){
    set Zeny, Zeny - 10000;
    setarray @c[2],154,49,148,261,132,189;
	Disp("","Entrance:Turtle Dungeon 1:Turtle Dungeon 2"); Pick("tur_dun");
}else{
	dispbottom "[ You should pay me 10,000z for this warp. ]";
	close;
}

case 34:
 
	setarray @c[2],42,31,48,30,204,78;
	Disp("","Carpenter's Shop in the Tree:Passage to a Foreign World:Hvergermil's Fountain");
	Pick("","um_dun01","um_dun02","yggdrasil01");
}

}

// --------------------------------------------------
//	Duplicates:
// --------------------------------------------------
prontera,159,183,3	duplicate(Warper)	Warper#1	721
//veil,125,117,4	duplicate(Warper)	Warper#2	721
//morocc,163,95,4	duplicate(Warper)	Warper#3	721
//geffen,123,63,4	duplicate(Warper)	Warper#4	721
//payon,159,230,4	duplicate(Warper)	Warper#5	721